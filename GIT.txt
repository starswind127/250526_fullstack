[ GitHub ]
    - 분산 버전(코드상태) 관리 툴 제공하는 웹 서비스
    1. 웹 서비스에서 코드들을 저장하는 *코드 저장소
    2. 다양한 기업들이 사용하는 협업 플랫폼
[ 회원가입 ]
    1. https://github.com/
    2. [ sign up ] 버튼 클릭하여 회원가입 진행 *이메일 필요
[ 로그인 ]
    1. [ Sign in ] 버튼 클릭하여 로그인 진행 
    2. Dashboard 페이지 확인 

[ vscode 와 github 최초 연동 ]
    =============== (PC마다 1번) ====================
    1. vscode 왼쪽 메뉴  [소스제어] 클릭 -> windows용 git다운로드
        https://git-scm.com/downloads
    2. [ Git for Windows/x64 Setup. ] 클릭하여 설치 진행 
    3. 다운로드 된 [Git-2.49.0-64-bit.exe] 실행파일 실행 
    4. 기본설정으로 계속 [next] 버튼 클릭하여 설치 진행 -> 완료
    5. VSCODE 재실행 
    6.  vscode 왼쪽 메뉴  [소스제어] 클릭 -> [ GitHub ] 게시 -> [로그인]허용 -> 웹페이지( 깃허브페이지(로그인) ) -> [continue ]
    7. publish to github public repository (선택후) -> [확인]
    =============== ( PC마다 1번 , 자리 변경시 ) ====================
    8. vscode 상단 메뉴 [ 터미널 ] 클릭 -> [ 새 터미널 ] 
    9. 터미널 상단메뉴 [+] 옆에 [v] 클릭 -> [ git bash ]    *깃허브 전용 터미널(명령어 이용한 프로그램 사용)
        [ git user.name 확인 ] git config --global user.name
        [ git user.name 설정 ] git config --global user.name git닉네임
        [ git user.email 확인 ] git config --global user.email 
        [ git user.email 설정] git config --global user.email git아이디@이메일포함
    10. vscode 왼쪽 메뉴  [소스제어] 클릭 -> 
        1. 상단에 메시지(코드를 업로드할때 기록할 메모) 작성 
        2. [커밋]버튼 오른쪽 [v] 클릭하여 [ 커밋 및 푸시 ] 클릭  * 현재 PC에 git 완료 
    *[ 원격 추가 ] 버튼 클릭 -> (tj2025a_front) 해당 폴터명 선택 -> main(원격) 추가
    =============== ( PC마다 1번 , 자리 변경시 ) ====================


[ 주요 용어 ]
    1. repository : 저장소 *코드들을 저장하는 하나의 저장소 * 주로 프로젝트 단위
    2. commit(커밋) : 코드 수정를 (로컬PC) 완료 * 로컬pc에만 완료되고 온라인(웹깃허브) 에는 반영이 안된다.
    3. push(푸시) : 현재 로컬 코드를 깃허브(웹서비스)에 반영 작업
    4. pull(풀) : 현재 웹서비스 버전으로 로컬 상태를 새로고침
    
[ 깃허브( 웹[VCS] 서비스 ) ]
    - [학원 : 로컬PC] C:\Users\tj-bu-702-teacher\Desktop\tj2025A_front
    - [집 : 로컬PC ] C:\Users\집컴퓨터\Desktop\tj2025A_front
    - 예()
        1. 학원에서 18:20 commit/push ---> 웹서비스 v1.1
        2. 집에서 20:00 pull --> 집PC v1.1
        3. 집에서 22:00 commit/push ---> 웹서비스 v1.2
        4. 다음날 학원 에서 9:30 pull ---> 학원PC v1.2
        5. 학원에서 18:20 commit/push ---> 웹서비스 v1.3
        6. 집에서 20:00 pull -> 집pc v1.3
    -------------------------------------------------------------------
    * 관례적으로 코드 작업 하기전에 'pull' 기능 이용하여 깃허브 버전 상태 최신화

--------------------------------------------------------------------------
    * 로그아웃 전 꼭 commit/push
    [VSCODE 깃 연동 해제]
        1.왼쪽 하단 메뉴 [계정] 클릭
        2. 로그인된 아이디 -> 로그아웃
    [현재 pc 깃 로그아웃]
        1. 윈도우 찾기 검색창 : 자격증명관리자
    [브라우저 깃 로그아웃]

    ------------------------------------------------------------------------

   [ 팀 깃 저장소 만들기 ]
        1. 새로운 폴더 생성.
        2. 임의 파일 생성 
        3. 해당 폴더(프로젝트)를 깃허브 게시 하기
        4. 'public' 저장소 권장
        5. 팀 깃 저장소에 팀원 초대하기
            (1) 깃 웹페이지 저장소에서 [settings] 메뉴클릭
            (2) 사이드바 메뉴[collaboraters] 메뉴 클릭
            (3) [add people]클릭 -> 초대할 사람 계정 검색
            ----초대 받는 사람 입장
            (1) 깃 홈페이지 상단 오른쪽 초대장 아이콘
            (2) 깃으로 연동된 이메일 확인
                초대승인
                vscode새창열기
                소스제어 -> 리포스토리 복제 -> 저장소 검색 -> 복제 

                브랜치 (독립적인 작업 공간) 생성
                각 팀원 1명당 하나씩 브랜치 생성 ( 서로 다른 브랜치 끼리는 영향 없다. )
                (1) 브랜치 생성
                소스제어 -> 기타작업 -> 분기(브랜치) -> 새분기
                (확인) : vscode하단 표시줄에 브랜치(분기)명 확인
                (2) 브랜치 생성후 커밋 푸시

                푸시(업로드)| 풀(다운로드)

                [팀 작업]
                1. 본인 브랜치 인지 확인 -> 본인 브랜치가 아니라면 체크아웃, 변경
                2. 각 브랜치들은 취합시간까지 코드 작성후 커밋/푸시 (자신의 브랜치에서 벗어나지 말기)
                3. 취합 담당자는 main 브랜치로 체크아웃 한다.
                4. 기타작업 -> 풀 -> 가져올위치 -> 취합할브랜치명 선택

                [git 페이지]
                -git  